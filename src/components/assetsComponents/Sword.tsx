/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { ModelProps } from "../../types/ModelProps";
import { isMeshType } from "../../utils/isMeshType";

export function Model(props: ModelProps) {
  const { nodes, materials } = useGLTF("/pirateKit/Models/glTF/sword.gltf");

  return (
    <group {...props}>
      <group position={[-2.663, 0.068, -8.576]}>
        {isMeshType(nodes.sword_2) && (
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.sword_2.geometry as THREE.BufferGeometry} // Type assertion
            material={materials.textile}
          />
        )}
        {isMeshType(nodes.sword_3) && (
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.sword_3.geometry as THREE.BufferGeometry} // Type assertion
            material={materials.stone}
          />
        )}
        {isMeshType(nodes.sword_4) && (
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.sword_4.geometry as THREE.BufferGeometry} // Type assertion
            material={materials.wood}
          />
        )}
        {isMeshType(nodes.sword_5) && (
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.sword_5.geometry as THREE.BufferGeometry} // Type assertion
            material={materials._defaultMat}
          />
        )}
      </group>
    </group>
  );
}

useGLTF.preload("/pirateKit/Models/glTF/sword.gltf");
